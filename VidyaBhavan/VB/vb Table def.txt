 create table login(user_id varchar2(20) PRIMARY KEY,pwd varchar2(20),role Varchar2(8));

create table STUDENT(user_id varchar2(20), 
                     STUD_ID  NUMBER PRIMARY KEY,
                     NAME varchar2(50),
                     CLASS_ID NUMBER NOT NULL,
                     PARENTS_CONTACT_NO NUMBER(10),
                     ADDRESS Varchar2(50),
                     FOREIGN KEY(CLASS_ID)
                     REFERENCES CLASS(CLASS_ID)
                     FOREIGN KEY (USER_ID) REFERENCES LOGIN(USER_ID));

CREATE TABLE CLASS(CLASS_ID NUMBER PRIMARY KEY,
                   CLASS_TEACHER VARCHAR2(20),
                   TOT_STUD NUMBER);

CREATE TABLE SUBJECT(SUB_ID NUMBER PRIMARY KEY,
                     SUB_NAME VARCHAR2(20));

CREATE TABLE TEST(TEST_ID NUMBER PRIMARY KEY,
                  SUB_ID NUMBER,
                  TOT_MKS NUMBER,
                  FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID));

CREATE TABLE REPORT(STUD_ID NUMBER,
                    TEST_ID NUMBER,
                    MARKS_OBT NUMBER,
                    FOREIGN KEY (STUD_ID) REFERENCES STUDENT(STUD_ID),
                    FOREIGN KEY (TEST_ID) REFERENCES TEST(TEST_ID));

CREATE TABLE TEACHER(USER_ID VARCHAR2(20),
                     TEACHER_ID NUMBER PRIMARY KEY,
                     TEACHER_NAME VARCHAR2(20),



CREATE OR REPLACE PACKAGE PA_LOGIN AS
    PROCEDURE I_LOGIN(sID IN LOGIN.USER_ID%TYPE,
                   sPWD IN LOGIN.PWD%TYPE,
                   sROLE IN LOGIN.ROLE%TYPE,
                   nRETURNCODE OUT NUMBER);

    PROCEDURE S_LOGIN(sID IN LOGIN.USER_ID%tYPE,
                        LOGIN_REC OUT SYS_REFCURSOR);
    PROCEDURE D_LOGIN(sID IN LOGIN.USER_ID%tYPE,
                        nRET_VALUE OUT NUMBER);
    PROCEDURE U_LOGIN(sID IN LOGIN.USER_ID%TYPE,
                   sPWD IN LOGIN.PWD%TYPE,
                   sROLE IN LOGIN.ROLE%TYPE,
                   nRETURNCODE OUT NUMBER);


    NOT_VALID_ID EXCEPTION ;
    

END PA_LOGIN;
/



                     FOREIGN KEY (USER_ID) REFERENCES LOGIN(USER_ID));


ALTER TABLE STUDENT 
ADD CONSTRAINT LOGIN_FK FOREIGN KEY (USER_ID) REFERENCES LOGIN(USER_ID);
                     
                     
CREATE TABLE TEASUB_LINK(TEACHER_ID NUMBER,
                         SUB_ID NUMBER,
                         FOREIGN KEY(TEACHER_ID) REFERENCES TEACHER(TEACHER_ID),
                         FOREIGN KEY (SUB_ID) REFERENCES SUBJECT(SUB_ID));


CREATE TABLE LECTURE(LEC_ID NUMBER PRIMARY KEY,
                     SUB_ID NUMBER,
                     CLASS_ID NUMBER,
                     TEACHER_ID NUMBER,
                     LEC_DATE DATE,
                     DURATION NUMBER,
                     FOREIGN KEY(SUB_ID) REFERENCES SUBJECT(SUB_ID),
                     FOREIGN KEY(CLASS_ID) REFERENCES CLASS(CLASS_ID),
                     FOREIGN KEY(TEACHER_ID) REFERENCES TEACHER(TEACHER_ID));

CREATE TABLE ATTENDANCE(STUD_ID NUMBER,
                        LEC_ID NUMBER,
                        STATUS CHAR(1),
                        FOREIGN KEY(STUD_ID) REFERENCES STUDENT(STUD_ID),
                        FOREIGN KEY(LEC_ID) REFERENCES LECTURE(LEC_ID));




INSERT INTO LOGIN VALUES('TEA001','HIRALAL','TEACHER'); 
INSERT INTO LOGIN VALUES('TEA002','AGNES','TEACHER'); 
INSERT INTO LOGIN VALUES('TEA003','MIMI','TEACHER'); 
INSERT INTO LOGIN VALUES('TEA004','FIONA','TEACHER'); 
INSERT INTO LOGIN VALUES('TEA005','ANNA','TEACHER'); 
INSERT INTO LOGIN VALUES('TEA006','KITCHEN','TEACHER'); 
INSERT INTO LOGIN VALUES('SH0101','SHLOK','STUDENT'); 
INSERT INTO LOGIN VALUES('KI0102','KIRAN','STUDENT'); 
INSERT INTO LOGIN VALUES('AB0103','ABOLI','STUDENT'); 
INSERT INTO LOGIN VALUES('TE0104','TERRY','STUDENT'); 
INSERT INTO LOGIN VALUES('EL0105','ELLE','STUDENT'); 
INSERT INTO LOGIN VALUES('AN0201','ANDY','STUDENT'); 
INSERT INTO LOGIN VALUES('CH0202','CHLOE','STUDENT'); 
INSERT INTO LOGIN VALUES('FE0203','FENNY','STUDENT'); 
INSERT INTO LOGIN VALUES('AN0204','ANDREW','STUDENT'); 
INSERT INTO LOGIN VALUES('CL0205','CLAIRE','STUDENT'); 
INSERT INTO LOGIN VALUES('JE0301','JENNY','STUDENT'); 
INSERT INTO LOGIN VALUES('JA0302','JAE','STUDENT'); 
INSERT INTO LOGIN VALUES('JO0303','JONG','STUDENT'); 
INSERT INTO LOGIN VALUES('SO0304','SOPHIA','STUDENT'); 
INSERT INTO LOGIN VALUES('ER0305','ERIC','STUDENT');


INSERT INTO TEACHER VALUES('TEA001',01,'HIRALAL K');
INSERT INTO TEACHER VALUES('TEA002',02,'AGNES LEE');
INSERT INTO TEACHER VALUES('TEA003',03,'MIMI CHOO');
INSERT INTO TEACHER VALUES('TEA004',04,'FIONA TEACHER');
INSERT INTO TEACHER VALUES('TEA005',05,'ANNA KIM');
INSERT INTO TEACHER VALUES('TEA006',06,'KITCHEN MADAM');


INSERT INTO CLASS VALUES(1,'ANNA KIM',5);
INSERT INTO CLASS VALUES(2,'MIMI CHOO',5);
INSERT INTO CLASS VALUES(3,'HIRALAL K',5);

INSERT INTO SUBJECT VALUES(1,'ENGLISH');
INSERT INTO SUBJECT VALUES(2,'MATHS');
INSERT INTO SUBJECT VALUES(3,'SCIENCE');
INSERT INTO SUBJECT VALUES(4,'KOREAN');
INSERT INTO SUBJECT VALUES(5,'PE');
INSERT INTO SUBJECT VALUES(6,'MUSIC');


INSERT INTO TEASUB_LINK VALUES(01,02);
INSERT INTO TEASUB_LINK VALUES(02,04);
INSERT INTO TEASUB_LINK VALUES(03,01);
INSERT INTO TEASUB_LINK VALUES(04,06);
INSERT INTO TEASUB_LINK VALUES(05,03);
INSERT INTO TEASUB_LINK VALUES(06,05);

INSERT INTO STUDENT VALUES('SH0101',101,'SHLOK KHAMITKAR',1,2317656,'PUNE INDIA');
INSERT INTO STUDENT VALUES('KI0102',102,'KIRAN BABA',1,7401656,'PCMC INDIA');
INSERT INTO STUDENT VALUES('AB0103',103,'ABOLI WADEKAR',1,8097656,'KATRAJ PUNE INDIA');
INSERT INTO STUDENT VALUES('TE0104',104,'TERRY KIM',1,231756,'SEOUL KOREA');
INSERT INTO STUDENT VALUES('EL0105',105,'ELLE CHAE',1,231766,'SANGAM DONG ');
INSERT INTO STUDENT VALUES('AN0201',201,'ANDY KIM',2,2376576,'MAPO GU SEOUL');
INSERT INTO STUDENT VALUES('CH0202',202,'CHLOE LEE',2,2176756,'JUNG GU SEOUL');
INSERT INTO STUDENT VALUES('FE0203',203,'FENNY MOON',2,3178656,'JONGNO GU SEOUL');
INSERT INTO STUDENT VALUES('AN0204',204,'ANDREW SONG',2,2837656,'INCHEON SEOUL');
INSERT INTO STUDENT VALUES('CL0205',205,'CLAIRE KIM',2,2931656,'SUWON SI SEOUL');
INSERT INTO STUDENT VALUES('JE0301',301,'JENNY LEE',3,2031756,'SANGAM DONG SEOUL');
INSERT INTO STUDENT VALUES('JA0302',302,'JAE IN MOON',3,2376566,'MOK DONG SEOUL');
INSERT INTO STUDENT VALUES('JO0303',303,'JONG UN KIM',3,2376556,'GANGNAM GU SEOUL');
INSERT INTO STUDENT VALUES('SO0304',304,'SOPHIA SONG',3,2374656,'SEOCHO GU SEOUL');
INSERT INTO STUDENT VALUES('ER0305',305,'ERIC THOMAS',3,2337656,'YONGSAN GU SEOUL');


CREATE SEQUENCE SUB_ID_SEQ 
START WITH 1
INCREMENT BY 1;


1	ENGLISH
2	MATHS
3	SCIENCE
4	ENGLISH
5	PE
6	MUSIC

COMMIT;


SELECT L.TEACHER_ID,L.TEACHER_NAME,T.SUB_ID,SI.SUB_NAME
FROM TEASUB_LINK T, TEACHER L, SUBJECT SI
WHERE T.TEACHER_ID=L.TEACHER_ID 
AND T.SUB_ID = SI.SUB_ID
ORDER BY L.TEACHER_ID;

TEACHER  TEACHER	SUBJ	SUBJ
ID	 NAME		ID	NAME

1	HIRALAL		4	KOREAN
2	AGNES LEE	1	ENGLISH
3	MIMI CHOO	3	SCIENCE
4	FIONA TEACHER	5	PE
5	ANNA KIM	6	MUSIC
6	KITCHEN MADAM	2	MATHS





COMMIT;


CREATE SEQUENCE LEC_ID_SEQ
START WITH 0
INCREMENT BY 1
MINVALUE 0;


ALTER TABLE LECTURE
ADD LEC_NUM NUMBER;


SH0101	SHLOK
KI0102	KIRAN
AB0103	ABOLI






 
 


SHOW ATTENDANCE QUERY 


SELECT S.STUD_ID,S.NAME,A.STATUS FROM ATTENDANCE A,STUDENT S 
WHERE A.LEC_ID = (SELECT L.LEC_ID FROM LECTURE L WHERE L.LEC_NUM = 1 AND L.CLASS_ID = 1) 
AND A.STUD_ID = S.STUD_ID;




test
Name     Null     Type   
-------- -------- ------ 
TEST_ID  NOT NULL NUMBER 
SUB_ID            NUMBER 
TOT_MKS           NUMBER 
CLASS_ID          NUMBER 
TEST_NUM          NUMBER 





SELECT T.TEST_NUM,T.TOT_MKS,R.MARKS_OBT FROM TEST T,REPORT R WHERE T.TEST_ID = R.TEST_ID AND R.STUD_ID = 101 
AND T.CLASS_ID IN (SELECT CLASS_ID FROM TEST WHERE SUB_ID = 1);


VARIABLE MYCURSOR REFCURSOR;
EXEC PA_STUDENT.S_STUDENT(0,'KIM',1,:MYCURSOR);
PRINT MYCURSOR



select st.name,a.stud_id,a.status,s.sub_name,l.lec_num 
from subject s,attendance a,lecture l student st 
where a.stud_id = 101 
and a.lec_id = l.lec_id 
and s.sub_id = l.sub_id 
and st.stud_id = 101;


report
Name      Null Type   
--------- ---- ------ 
STUD_ID        NUMBER 
TEST_ID        NUMBER 
MARKS_OBT      NUMBER 

TEST
-------- -------- ------ 
TEST_ID  NOT NULL NUMBER 
SUB_ID            NUMBER 
TOT_MKS           NUMBER 
CLASS_ID          NUMBER 
TEST_NUM          NUMBER 

SUBJECT
-------- -------- ------------ 
SUB_ID   NOT NULL NUMBER       
SUB_NAME          VARCHAR2(20) 

STUDENT
Name               Null     Type         
------------------ -------- ------------ 
USER_ID                     VARCHAR2(20) 
STUD_ID            NOT NULL NUMBER       
NAME                        VARCHAR2(50) 
CLASS_ID           NOT NULL NUMBER       
PARENTS_CONTACT_NO          NUMBER(10)   
ADDRESS                     VARCHAR2(50) 

SELECT S.STUD_ID,S.NAME,SB.SUB_NAME,T.TEST_NUM,T.TOT_MKS,R.MARKS_OBT FROM STUDENT S, REPORT R, TEST T,SUBJECT SB
WHERE R.STUD_ID = 101 
AND R.TEST_ID = T.TEST_ID
AND T.SUB_ID = SB.SUB_ID
AND S.STUD_ID = 101;

CREATE TABLE NOTICE(NOTICE_ID NUMBER PRIMARY KEY,
                   NOTICE_DATA VARCHAR2(1000),
		   SUB_ID NUMBER,
		   NOTICE_DATE DATE);


CREATE TABLE STUDNOTE_LINK(NOTICE_ID NUMBER,
			   STUD_ID NUMBER,
			   NOTICE_NUM NUMBER,
FOREIGN KEY (NOTICE_ID) REFERENCES NOTICE(NOTICE_ID));









CREATE SEQUENCE NOTICE_ID_SEQ 
START WITH 1
INCREMENT BY 1;




SELECT * FROM NOTICE;
SELECT * FROM STUDNOTE_LINK;

    private int roll;
    private String name;
    private String sub;
    private int num;
    private Date dt;
    private String data;

SELECT S.STUD_ID,S.NAME,SB.SUB_NAME, SL.NOTICE_NUM,N.NOTICE_DATE,N.NOTICE_DATA
FROM STUDENT S,SUBJECT SB,STUDNOTE_LINK SL,NOTICE N
WHERE N.NOTICE_ID = SL.NOTICE_ID
AND S.STUD_ID = SL.STUD_ID
AND SB.SUB_ID = N.SUB_ID
AND SL.STUD_ID = 101;







